import java.util.HashMap;
import java.util.Iterator;
public class AStarState
{
	private HashMap<Location, Waypoint> openedWaypointsSet = new HashMap<Location, Waypoint>();
	private HashMap<Location, Waypoint> closedWaypointsSet = new HashMap<Location, Waypoint>();
	
    private Map2D map;

    public AStarState(Map2D map)
    {
        if (map == null)
            throw new NullPointerException("map cannot be null");

        this.map = map;
    }

    public Map2D getMap()
    {
        return map;
    }

    public Waypoint getMinOpenWaypoint()
    {
    	Waypoint minWaypoint = null;
    	float minWaypointValue = Float.MAX_VALUE;
    	
    	for (Waypoint key : openedWaypointsSet.values()) {
    		if (Float.parseFloat(key.getTotalCost()) < minWaypoint) {
    			
    		}
    	}
    }
    
    public boolean addOpenWaypoint(Waypoint newWP)
    {
        return false;
    }

    public int numOpenWaypoints()
    {
        return openedWaypointsSet.size();
    }

    public void closeWaypoint(Location loc)
    {
    }

    public boolean isLocationClosed(Location loc)
    {
        return false;
    }
}